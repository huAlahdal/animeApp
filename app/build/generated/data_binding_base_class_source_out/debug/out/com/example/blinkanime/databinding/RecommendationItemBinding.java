// Generated by view binder compiler. Do not edit!
package com.example.blinkanime.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.blinkanime.R;
import com.google.android.material.progressindicator.CircularProgressIndicator;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class RecommendationItemBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final ImageView leftImage;

  @NonNull
  public final TextView leftTitle;

  @NonNull
  public final CircularProgressIndicator progressCircular;

  @NonNull
  public final TextView recommendationOverview;

  @NonNull
  public final ImageView rightImage;

  @NonNull
  public final TextView rightTitle;

  @NonNull
  public final Button showButton;

  private RecommendationItemBinding(@NonNull CardView rootView, @NonNull ImageView leftImage,
      @NonNull TextView leftTitle, @NonNull CircularProgressIndicator progressCircular,
      @NonNull TextView recommendationOverview, @NonNull ImageView rightImage,
      @NonNull TextView rightTitle, @NonNull Button showButton) {
    this.rootView = rootView;
    this.leftImage = leftImage;
    this.leftTitle = leftTitle;
    this.progressCircular = progressCircular;
    this.recommendationOverview = recommendationOverview;
    this.rightImage = rightImage;
    this.rightTitle = rightTitle;
    this.showButton = showButton;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static RecommendationItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static RecommendationItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.recommendation_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static RecommendationItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.left_image;
      ImageView leftImage = ViewBindings.findChildViewById(rootView, id);
      if (leftImage == null) {
        break missingId;
      }

      id = R.id.left_title;
      TextView leftTitle = ViewBindings.findChildViewById(rootView, id);
      if (leftTitle == null) {
        break missingId;
      }

      id = R.id.progress_circular;
      CircularProgressIndicator progressCircular = ViewBindings.findChildViewById(rootView, id);
      if (progressCircular == null) {
        break missingId;
      }

      id = R.id.recommendation_overview;
      TextView recommendationOverview = ViewBindings.findChildViewById(rootView, id);
      if (recommendationOverview == null) {
        break missingId;
      }

      id = R.id.right_image;
      ImageView rightImage = ViewBindings.findChildViewById(rootView, id);
      if (rightImage == null) {
        break missingId;
      }

      id = R.id.right_title;
      TextView rightTitle = ViewBindings.findChildViewById(rootView, id);
      if (rightTitle == null) {
        break missingId;
      }

      id = R.id.showButton;
      Button showButton = ViewBindings.findChildViewById(rootView, id);
      if (showButton == null) {
        break missingId;
      }

      return new RecommendationItemBinding((CardView) rootView, leftImage, leftTitle,
          progressCircular, recommendationOverview, rightImage, rightTitle, showButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
