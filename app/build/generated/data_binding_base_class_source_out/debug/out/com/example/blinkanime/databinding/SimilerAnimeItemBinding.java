// Generated by view binder compiler. Do not edit!
package com.example.blinkanime.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.blinkanime.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class SimilerAnimeItemBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final ImageView animeImage;

  @NonNull
  public final TextView animeReason;

  @NonNull
  public final TextView animeRecommended;

  @NonNull
  public final TextView animeTitle;

  @NonNull
  public final Button showMore;

  private SimilerAnimeItemBinding(@NonNull CardView rootView, @NonNull ImageView animeImage,
      @NonNull TextView animeReason, @NonNull TextView animeRecommended,
      @NonNull TextView animeTitle, @NonNull Button showMore) {
    this.rootView = rootView;
    this.animeImage = animeImage;
    this.animeReason = animeReason;
    this.animeRecommended = animeRecommended;
    this.animeTitle = animeTitle;
    this.showMore = showMore;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static SimilerAnimeItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static SimilerAnimeItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.similer_anime_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static SimilerAnimeItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.anime_image;
      ImageView animeImage = ViewBindings.findChildViewById(rootView, id);
      if (animeImage == null) {
        break missingId;
      }

      id = R.id.anime_reason;
      TextView animeReason = ViewBindings.findChildViewById(rootView, id);
      if (animeReason == null) {
        break missingId;
      }

      id = R.id.anime_recommended;
      TextView animeRecommended = ViewBindings.findChildViewById(rootView, id);
      if (animeRecommended == null) {
        break missingId;
      }

      id = R.id.anime_title;
      TextView animeTitle = ViewBindings.findChildViewById(rootView, id);
      if (animeTitle == null) {
        break missingId;
      }

      id = R.id.show_more;
      Button showMore = ViewBindings.findChildViewById(rootView, id);
      if (showMore == null) {
        break missingId;
      }

      return new SimilerAnimeItemBinding((CardView) rootView, animeImage, animeReason,
          animeRecommended, animeTitle, showMore);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
