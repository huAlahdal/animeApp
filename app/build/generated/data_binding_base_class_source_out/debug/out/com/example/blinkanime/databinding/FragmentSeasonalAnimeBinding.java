// Generated by view binder compiler. Do not edit!
package com.example.blinkanime.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.blinkanime.R;
import com.google.android.material.progressindicator.CircularProgressIndicator;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentSeasonalAnimeBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final LinearLayout linearLayout;

  @NonNull
  public final CircularProgressIndicator progressCircular;

  @NonNull
  public final RecyclerView recyclerViewMovie;

  @NonNull
  public final RecyclerView recyclerViewOna;

  @NonNull
  public final RecyclerView recyclerViewOva;

  @NonNull
  public final RecyclerView recyclerViewSpecial;

  @NonNull
  public final RecyclerView recyclerViewTv;

  private FragmentSeasonalAnimeBinding(@NonNull ConstraintLayout rootView,
      @NonNull LinearLayout linearLayout, @NonNull CircularProgressIndicator progressCircular,
      @NonNull RecyclerView recyclerViewMovie, @NonNull RecyclerView recyclerViewOna,
      @NonNull RecyclerView recyclerViewOva, @NonNull RecyclerView recyclerViewSpecial,
      @NonNull RecyclerView recyclerViewTv) {
    this.rootView = rootView;
    this.linearLayout = linearLayout;
    this.progressCircular = progressCircular;
    this.recyclerViewMovie = recyclerViewMovie;
    this.recyclerViewOna = recyclerViewOna;
    this.recyclerViewOva = recyclerViewOva;
    this.recyclerViewSpecial = recyclerViewSpecial;
    this.recyclerViewTv = recyclerViewTv;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentSeasonalAnimeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentSeasonalAnimeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_seasonal_anime, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentSeasonalAnimeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.linear_layout;
      LinearLayout linearLayout = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout == null) {
        break missingId;
      }

      id = R.id.progress_circular;
      CircularProgressIndicator progressCircular = ViewBindings.findChildViewById(rootView, id);
      if (progressCircular == null) {
        break missingId;
      }

      id = R.id.recycler_view_movie;
      RecyclerView recyclerViewMovie = ViewBindings.findChildViewById(rootView, id);
      if (recyclerViewMovie == null) {
        break missingId;
      }

      id = R.id.recycler_view_ona;
      RecyclerView recyclerViewOna = ViewBindings.findChildViewById(rootView, id);
      if (recyclerViewOna == null) {
        break missingId;
      }

      id = R.id.recycler_view_ova;
      RecyclerView recyclerViewOva = ViewBindings.findChildViewById(rootView, id);
      if (recyclerViewOva == null) {
        break missingId;
      }

      id = R.id.recycler_view_special;
      RecyclerView recyclerViewSpecial = ViewBindings.findChildViewById(rootView, id);
      if (recyclerViewSpecial == null) {
        break missingId;
      }

      id = R.id.recycler_view_tv;
      RecyclerView recyclerViewTv = ViewBindings.findChildViewById(rootView, id);
      if (recyclerViewTv == null) {
        break missingId;
      }

      return new FragmentSeasonalAnimeBinding((ConstraintLayout) rootView, linearLayout,
          progressCircular, recyclerViewMovie, recyclerViewOna, recyclerViewOva,
          recyclerViewSpecial, recyclerViewTv);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
