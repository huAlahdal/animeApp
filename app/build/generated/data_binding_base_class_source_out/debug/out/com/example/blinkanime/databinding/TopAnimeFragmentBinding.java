// Generated by view binder compiler. Do not edit!
package com.example.blinkanime.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.blinkanime.R;
import com.google.android.material.progressindicator.CircularProgressIndicator;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class TopAnimeFragmentBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final LinearLayout commentsPages;

  @NonNull
  public final Button nextPage;

  @NonNull
  public final Button previousPage;

  @NonNull
  public final CircularProgressIndicator progressCircular;

  @NonNull
  public final RecyclerView recyclerView;

  private TopAnimeFragmentBinding(@NonNull ConstraintLayout rootView,
      @NonNull LinearLayout commentsPages, @NonNull Button nextPage, @NonNull Button previousPage,
      @NonNull CircularProgressIndicator progressCircular, @NonNull RecyclerView recyclerView) {
    this.rootView = rootView;
    this.commentsPages = commentsPages;
    this.nextPage = nextPage;
    this.previousPage = previousPage;
    this.progressCircular = progressCircular;
    this.recyclerView = recyclerView;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static TopAnimeFragmentBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static TopAnimeFragmentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.top_anime_fragment, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static TopAnimeFragmentBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.comments_pages;
      LinearLayout commentsPages = ViewBindings.findChildViewById(rootView, id);
      if (commentsPages == null) {
        break missingId;
      }

      id = R.id.next_page;
      Button nextPage = ViewBindings.findChildViewById(rootView, id);
      if (nextPage == null) {
        break missingId;
      }

      id = R.id.previous_page;
      Button previousPage = ViewBindings.findChildViewById(rootView, id);
      if (previousPage == null) {
        break missingId;
      }

      id = R.id.progress_circular;
      CircularProgressIndicator progressCircular = ViewBindings.findChildViewById(rootView, id);
      if (progressCircular == null) {
        break missingId;
      }

      id = R.id.recycler_view;
      RecyclerView recyclerView = ViewBindings.findChildViewById(rootView, id);
      if (recyclerView == null) {
        break missingId;
      }

      return new TopAnimeFragmentBinding((ConstraintLayout) rootView, commentsPages, nextPage,
          previousPage, progressCircular, recyclerView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
