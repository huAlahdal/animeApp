// Generated by view binder compiler. Do not edit!
package com.example.blinkanime.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.blinkanime.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DetailsEpItemBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final TextView epAirDate;

  @NonNull
  public final TextView epScore;

  @NonNull
  public final ImageView episodeImage;

  @NonNull
  public final LinearLayout episodeItem;

  @NonNull
  public final TextView episodeName;

  @NonNull
  public final TextView episodeTitle;

  @NonNull
  public final TextView episodeViews;

  private DetailsEpItemBinding(@NonNull CardView rootView, @NonNull TextView epAirDate,
      @NonNull TextView epScore, @NonNull ImageView episodeImage, @NonNull LinearLayout episodeItem,
      @NonNull TextView episodeName, @NonNull TextView episodeTitle,
      @NonNull TextView episodeViews) {
    this.rootView = rootView;
    this.epAirDate = epAirDate;
    this.epScore = epScore;
    this.episodeImage = episodeImage;
    this.episodeItem = episodeItem;
    this.episodeName = episodeName;
    this.episodeTitle = episodeTitle;
    this.episodeViews = episodeViews;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static DetailsEpItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DetailsEpItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.details_ep_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DetailsEpItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.ep_air_date;
      TextView epAirDate = ViewBindings.findChildViewById(rootView, id);
      if (epAirDate == null) {
        break missingId;
      }

      id = R.id.ep_score;
      TextView epScore = ViewBindings.findChildViewById(rootView, id);
      if (epScore == null) {
        break missingId;
      }

      id = R.id.episode_image;
      ImageView episodeImage = ViewBindings.findChildViewById(rootView, id);
      if (episodeImage == null) {
        break missingId;
      }

      id = R.id.episode_item;
      LinearLayout episodeItem = ViewBindings.findChildViewById(rootView, id);
      if (episodeItem == null) {
        break missingId;
      }

      id = R.id.episode_name;
      TextView episodeName = ViewBindings.findChildViewById(rootView, id);
      if (episodeName == null) {
        break missingId;
      }

      id = R.id.episode_title;
      TextView episodeTitle = ViewBindings.findChildViewById(rootView, id);
      if (episodeTitle == null) {
        break missingId;
      }

      id = R.id.episode_views;
      TextView episodeViews = ViewBindings.findChildViewById(rootView, id);
      if (episodeViews == null) {
        break missingId;
      }

      return new DetailsEpItemBinding((CardView) rootView, epAirDate, epScore, episodeImage,
          episodeItem, episodeName, episodeTitle, episodeViews);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
