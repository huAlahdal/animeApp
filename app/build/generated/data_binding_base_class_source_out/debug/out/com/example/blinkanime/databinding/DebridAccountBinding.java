// Generated by view binder compiler. Do not edit!
package com.example.blinkanime.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.blinkanime.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DebridAccountBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView debridPoints;

  @NonNull
  public final TextView debridPremium;

  @NonNull
  public final CardView debridPremiumCard;

  @NonNull
  public final TextView debridPremiumText;

  @NonNull
  public final TextView debridUser;

  private DebridAccountBinding(@NonNull LinearLayout rootView, @NonNull TextView debridPoints,
      @NonNull TextView debridPremium, @NonNull CardView debridPremiumCard,
      @NonNull TextView debridPremiumText, @NonNull TextView debridUser) {
    this.rootView = rootView;
    this.debridPoints = debridPoints;
    this.debridPremium = debridPremium;
    this.debridPremiumCard = debridPremiumCard;
    this.debridPremiumText = debridPremiumText;
    this.debridUser = debridUser;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DebridAccountBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DebridAccountBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.debrid_account, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DebridAccountBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.debrid_points;
      TextView debridPoints = ViewBindings.findChildViewById(rootView, id);
      if (debridPoints == null) {
        break missingId;
      }

      id = R.id.debrid_premium;
      TextView debridPremium = ViewBindings.findChildViewById(rootView, id);
      if (debridPremium == null) {
        break missingId;
      }

      id = R.id.debrid_premium_card;
      CardView debridPremiumCard = ViewBindings.findChildViewById(rootView, id);
      if (debridPremiumCard == null) {
        break missingId;
      }

      id = R.id.debrid_premium_text;
      TextView debridPremiumText = ViewBindings.findChildViewById(rootView, id);
      if (debridPremiumText == null) {
        break missingId;
      }

      id = R.id.debrid_user;
      TextView debridUser = ViewBindings.findChildViewById(rootView, id);
      if (debridUser == null) {
        break missingId;
      }

      return new DebridAccountBinding((LinearLayout) rootView, debridPoints, debridPremium,
          debridPremiumCard, debridPremiumText, debridUser);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
