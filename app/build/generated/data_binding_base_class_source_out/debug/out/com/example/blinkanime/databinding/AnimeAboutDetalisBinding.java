// Generated by view binder compiler. Do not edit!
package com.example.blinkanime.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.blinkanime.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class AnimeAboutDetalisBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView animeDetails;

  @NonNull
  public final TextView animeEpisodesNum;

  @NonNull
  public final ImageView animeImage;

  @NonNull
  public final TextView animeLength;

  @NonNull
  public final TextView animeName;

  @NonNull
  public final TextView animePopularity;

  @NonNull
  public final TextView animeRank;

  @NonNull
  public final TextView animeScore;

  @NonNull
  public final TextView animeSeason;

  @NonNull
  public final TextView animeSource;

  @NonNull
  public final TextView animeStatus;

  @NonNull
  public final TextView animeStudio;

  @NonNull
  public final TextView animeType;

  @NonNull
  public final TextView animeYear;

  @NonNull
  public final LinearLayout genresContainer;

  @NonNull
  public final LinearLayout parentLayout;

  private AnimeAboutDetalisBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextView animeDetails, @NonNull TextView animeEpisodesNum,
      @NonNull ImageView animeImage, @NonNull TextView animeLength, @NonNull TextView animeName,
      @NonNull TextView animePopularity, @NonNull TextView animeRank, @NonNull TextView animeScore,
      @NonNull TextView animeSeason, @NonNull TextView animeSource, @NonNull TextView animeStatus,
      @NonNull TextView animeStudio, @NonNull TextView animeType, @NonNull TextView animeYear,
      @NonNull LinearLayout genresContainer, @NonNull LinearLayout parentLayout) {
    this.rootView = rootView;
    this.animeDetails = animeDetails;
    this.animeEpisodesNum = animeEpisodesNum;
    this.animeImage = animeImage;
    this.animeLength = animeLength;
    this.animeName = animeName;
    this.animePopularity = animePopularity;
    this.animeRank = animeRank;
    this.animeScore = animeScore;
    this.animeSeason = animeSeason;
    this.animeSource = animeSource;
    this.animeStatus = animeStatus;
    this.animeStudio = animeStudio;
    this.animeType = animeType;
    this.animeYear = animeYear;
    this.genresContainer = genresContainer;
    this.parentLayout = parentLayout;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static AnimeAboutDetalisBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static AnimeAboutDetalisBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.anime_about_detalis, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static AnimeAboutDetalisBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.anime_details;
      TextView animeDetails = ViewBindings.findChildViewById(rootView, id);
      if (animeDetails == null) {
        break missingId;
      }

      id = R.id.anime_episodesNum;
      TextView animeEpisodesNum = ViewBindings.findChildViewById(rootView, id);
      if (animeEpisodesNum == null) {
        break missingId;
      }

      id = R.id.anime_image;
      ImageView animeImage = ViewBindings.findChildViewById(rootView, id);
      if (animeImage == null) {
        break missingId;
      }

      id = R.id.anime_length;
      TextView animeLength = ViewBindings.findChildViewById(rootView, id);
      if (animeLength == null) {
        break missingId;
      }

      id = R.id.anime_name;
      TextView animeName = ViewBindings.findChildViewById(rootView, id);
      if (animeName == null) {
        break missingId;
      }

      id = R.id.anime_popularity;
      TextView animePopularity = ViewBindings.findChildViewById(rootView, id);
      if (animePopularity == null) {
        break missingId;
      }

      id = R.id.anime_rank;
      TextView animeRank = ViewBindings.findChildViewById(rootView, id);
      if (animeRank == null) {
        break missingId;
      }

      id = R.id.anime_score;
      TextView animeScore = ViewBindings.findChildViewById(rootView, id);
      if (animeScore == null) {
        break missingId;
      }

      id = R.id.anime_season;
      TextView animeSeason = ViewBindings.findChildViewById(rootView, id);
      if (animeSeason == null) {
        break missingId;
      }

      id = R.id.anime_source;
      TextView animeSource = ViewBindings.findChildViewById(rootView, id);
      if (animeSource == null) {
        break missingId;
      }

      id = R.id.anime_status;
      TextView animeStatus = ViewBindings.findChildViewById(rootView, id);
      if (animeStatus == null) {
        break missingId;
      }

      id = R.id.anime_studio;
      TextView animeStudio = ViewBindings.findChildViewById(rootView, id);
      if (animeStudio == null) {
        break missingId;
      }

      id = R.id.anime_type;
      TextView animeType = ViewBindings.findChildViewById(rootView, id);
      if (animeType == null) {
        break missingId;
      }

      id = R.id.anime_year;
      TextView animeYear = ViewBindings.findChildViewById(rootView, id);
      if (animeYear == null) {
        break missingId;
      }

      id = R.id.genres_container;
      LinearLayout genresContainer = ViewBindings.findChildViewById(rootView, id);
      if (genresContainer == null) {
        break missingId;
      }

      id = R.id.parent_layout;
      LinearLayout parentLayout = ViewBindings.findChildViewById(rootView, id);
      if (parentLayout == null) {
        break missingId;
      }

      return new AnimeAboutDetalisBinding((ConstraintLayout) rootView, animeDetails,
          animeEpisodesNum, animeImage, animeLength, animeName, animePopularity, animeRank,
          animeScore, animeSeason, animeSource, animeStatus, animeStudio, animeType, animeYear,
          genresContainer, parentLayout);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
